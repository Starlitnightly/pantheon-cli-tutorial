# Python混合编程终端演示

# 第一轮：随机数生成
生成10个随机数

# 系统自动执行：
# Generate 10 random numbers in [0,1)
try:
    import numpy as np
except Exception:
    pass

rand_nums = np.random.rand(10).tolist()
print(rand_nums)
rand_nums

# 输出结果：
[0.12503025968481385, 0.6831302549495222, 0.4784760603762457, 0.033863135917047926, 0.9343923994669411, 0.12618417110531088, 0.1660418598631337, 0.3929838589644551, 0.5248320170746258, 0.6894876053780613]

# 第二轮：重新生成（展示一致性）
生成10个随机数

# 系统执行：
import numpy as np
nums = np.random.rand(10).tolist()
print(nums)
nums

# 输出结果：
[0.41038397186446574, 0.7268925459803518, 0.1776869757668036, 0.8344962113029184, 0.8747606213084439, 0.5701383903257705, 0.30209926423528977, 0.5915732090235458, 0.4728018329803404, 0.5613809946871403]

# 第三轮：统计分析（展示上下文理解）
显示均值和标准差

# 系统智能执行：
import numpy as np
# Use existing 'nums' if available, otherwise generate new
try:
    nums
except NameError:
    nums = np.random.rand(10).tolist()

mean_val = float(np.mean(nums))
std_val = float(np.std(nums, ddof=0))
mean_val, std_val

# 输出结果：
(0.552221401747507, 0.2110536781456135)

# 技术特性展示：
# ✅ 自然语言理解
# ✅ 变量状态持久化  
# ✅ 智能异常处理
# ✅ 上下文感知计算
# ✅ 专业统计术语解释

\bio
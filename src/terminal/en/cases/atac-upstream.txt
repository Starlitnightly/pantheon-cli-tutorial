# ATAC-seq Upstream Processing Terminal Demonstration

# Start terminal for ATAC-seq data processing
bash

# 1. Environment preparation and quality control check
# Check data quality
fastqc raw_data/*.fastq.gz -o fastqc_output/

# View QC report
multiqc fastqc_output/ -o multiqc_report/

# 2. Data preprocessing - adapter removal and quality control
# Use trimmomatic to remove adapters and low-quality reads
trimmomatic PE -phred33 \
  sample_R1.fastq.gz sample_R2.fastq.gz \
  sample_R1_paired.fastq.gz sample_R1_unpaired.fastq.gz \
  sample_R2_paired.fastq.gz sample_R2_unpaired.fastq.gz \
  ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 \
  LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36

# 3. Reference genome alignment
# Use bowtie2 for alignment
bowtie2 -x hg38_index \
  -1 sample_R1_paired.fastq.gz \
  -2 sample_R2_paired.fastq.gz \
  -S sample_aligned.sam \
  -p 8 --very-sensitive --no-discordant --no-mixed

# Convert to BAM format and sort
samtools view -bS sample_aligned.sam | samtools sort -o sample_sorted.bam
samtools index sample_sorted.bam

# 4. Remove duplicates and filter
# Use picard to remove duplicate reads
picard MarkDuplicates \
  I=sample_sorted.bam \
  O=sample_deduped.bam \
  M=sample_metrics.txt \
  REMOVE_DUPLICATES=true

# Filter low-quality alignments
samtools view -h -f 2 -q 30 sample_deduped.bam | \
  samtools view -bS - > sample_filtered.bam
samtools index sample_filtered.bam

# 5. Remove mitochondrial and blacklist regions
# Download blacklist regions file
wget -O blacklist.bed.gz \
  "https://github.com/Boyle-Lab/Blacklist/raw/master/lists/hg38-blacklist.v2.bed.gz"
gunzip blacklist.bed.gz

# Remove blacklist regions and mitochondrial reads
bedtools intersect -v -abam sample_filtered.bam -b blacklist.bed > sample_clean.bam
samtools view -h sample_clean.bam | \
  awk '($1 ~ /^@/ || $3 != "chrM")' | \
  samtools view -bS - > sample_final.bam
samtools index sample_final.bam

# 6. Fragment size analysis
# Use bamPEFragmentSize to analyze insert fragment sizes
bamPEFragmentSize -b sample_final.bam \
  --maxFragmentLength 1000 \
  --histogram fragmentSizes.png \
  --numberOfProcessors 8

# 7. Generate coverage track files
# Generate normalized bigwig files
bamCoverage -b sample_final.bam \
  -o sample_coverage.bw \
  --binSize 10 \
  --normalizeUsing RPKM \
  --numberOfProcessors 8

# 8. Quality control check
# Use phantompeakqualtools for quality assessment
Rscript run_spp.R -c=sample_final.bam -savp=sample_qc_plot.pdf

# Calculate TSS enrichment
computeMatrix reference-point \
  --referencePoint TSS \
  -b 2000 -a 2000 \
  -R genes_TSS.bed \
  -S sample_coverage.bw \
  --skipZeros \
  -o matrix_TSS.gz

plotHeatmap -m matrix_TSS.gz \
  -out TSS_enrichment.png \
  --colorMap Blues \
  --whatToShow 'heatmap and colorbar'

# 9. Peak calling preparation
# Generate normalized file for peak calling
macs2 callpeak -t sample_final.bam \
  -f BAMPE -n sample \
  -g hs --keep-dup all \
  --outdir peaks/ \
  -q 0.05

# 10. Results summary
echo "ATAC-seq upstream processing complete"
echo "Generated files:"
echo "- sample_final.bam: Final processed alignment file"
echo "- sample_coverage.bw: Coverage track file"  
echo "- peaks/: Peak calling results directory"
echo "- QC reports: fastqc_output/ and multiqc_report/"

\bio